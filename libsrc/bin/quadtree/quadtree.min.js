var QuadTree=(function(){function QuadTree(bounds,level){if(level===void 0){level=0}this.objects=[];this.nodes=[];this.object_refs=[];this.level=level;this.bounds=bounds}QuadTree.prototype.getIndex=function(pRect){var index=-1,verticalMidpoint=this.bounds.x+(this.bounds.width/2),horizontalMidpoint=this.bounds.y+(this.bounds.height/2),topQuadrant=(pRect.y<horizontalMidpoint&&pRect.y+pRect.height<horizontalMidpoint),bottomQuadrant=(pRect.y>horizontalMidpoint);if(pRect.x<verticalMidpoint&&pRect.x+pRect.width<verticalMidpoint){if(topQuadrant){index=1}else{if(bottomQuadrant){index=2}}}else{if(pRect.x>verticalMidpoint){if(topQuadrant){index=0}else{if(bottomQuadrant){index=3}}}}return index};QuadTree.prototype.split=function(){var nextLevel=this.level+1,subWidth=Math.round(this.bounds.width/2),subHeight=Math.round(this.bounds.height/2),x=Math.round(this.bounds.x),y=Math.round(this.bounds.y);this.nodes[0]=new QuadTree({x:x+subWidth,y:y,width:subWidth,height:subHeight},nextLevel);this.nodes[1]=new QuadTree({x:x,y:y,width:subWidth,height:subHeight},nextLevel);this.nodes[2]=new QuadTree({x:x,y:y+subHeight,width:subWidth,height:subHeight},nextLevel);this.nodes[3]=new QuadTree({x:x+subWidth,y:y+subHeight,width:subWidth,height:subHeight},nextLevel)};QuadTree.prototype.insert=function(obj){var i=0,index;if(typeof this.nodes[0]!=="undefined"){index=this.getIndex(obj);if(index!==-1){this.nodes[index].insert(obj);return}}this.objects.push(obj);if(this.objects.length>QuadTree.MAX_OBJECTS&&this.level<QuadTree.MAX_LEVELS){if(typeof this.nodes[0]==="undefined"){this.split()}while(i<this.objects.length){index=this.getIndex(this.objects[i]);if(index!==-1){this.nodes[index].insert(this.objects.splice(i,1)[0])}else{i=i+1}}}};QuadTree.prototype.retrieve=function(pRect){var index=this.getIndex(pRect),returnObjects=this.objects;if(typeof this.nodes[0]!=="undefined"){if(index!==-1){returnObjects=returnObjects.concat(this.nodes[index].retrieve(pRect))}else{for(var i=0;i<this.nodes.length;i=i+1){returnObjects=returnObjects.concat(this.nodes[i].retrieve(pRect))}}}return returnObjects};QuadTree.prototype.getAll=function(){var objects=this.objects;for(var i=0;i<this.nodes.length;i=i+1){objects=objects.concat(this.nodes[i].getAll())}return objects};QuadTree.prototype.getObjectNode=function(obj){var index;if(!this.nodes.length){return this}else{index=this.getIndex(obj);if(index===-1){return this}else{var node=this.nodes[index].getObjectNode(obj);if(node){return this.nodes[index].getObjectNode(obj)}}}return false};QuadTree.prototype.removeObject=function(obj){var node=this.getObjectNode(obj),index=node.objects.indexOf(obj);if(index===-1){return false}node.objects.splice(index,1)};QuadTree.prototype.clear=function(){this.objects=[];if(!this.nodes.length){return}for(var i=0;i<this.nodes.length;i=i+1){this.nodes[i].clear()}this.nodes=[]};QuadTree.prototype.cleanup=function(){var objects=this.getAll();this.clear();for(var i=0;i<objects.length;i++){this.insert(objects[i])}};QuadTree.MAX_OBJECTS=10;QuadTree.MAX_LEVELS=5;return QuadTree}());